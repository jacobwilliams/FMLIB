  
  
  Case 1.  Call FM_FIND_MIN to find a relative minimum between 1 and 2
           for f(x) = X**3 - 9*X + 17.
           Use KPRT = 0, so no output will be done in the routine, then
           write the results from the main program.

  A minimum for function 1 is
     x  = 1.732050807568877293527446341506
   f(x) = 6.607695154586736238835321950965
  
  
  Case 2.  Find a relative maximum between -5 and 1.
           Use KPRT = 1, so FM_FIND_MIN will print the results.
  
  FM_FIND_MIN.   Function   1    16 iterations.  A relative maximum on interval
                -5.0000000000E+00    to     1.0000000000E+00  is
                  x  = -1.7320508075688772935274463M+0
                f(x) =  2.7392304845413263761164678M+1
  
  
  
  Case 3.  Find a relative maximum between -5 and 5.
           Use KPRT = 2, so FM_FIND_MIN will print all iterations,
           as well as the final results.
  
  FM_FIND_MIN.  Begin trace of all iterations.
                Search for a relative maximum on the interval
                -5.0000000000E+00    to     5.0000000000E+00

      J =  1      x  = -1.1803398874989484820458683M+0
                f(x) =  2.5978606800437431468918769M+1

      J =  2      x  =  1.1803398874989484820458683M+0
                f(x) =  8.0213931995625685310812310M+0

      J =  3      x  = -2.6393202250021030359082633M+0
                f(x) =  2.2368347645024217041049002M+1

      J =  4      x  = -1.4410524493997139871164762M+0
                f(x) =  2.6976936181159067510140577M+1

      J =  5      x  = -1.6746424834205828324577161M+0
                f(x) =  2.7375369005904349050992994M+1

      J =  6      x  = -1.7563668929907300019646897M+0
                f(x) =  2.7389218128504053203605665M+1

      J =  7      x  = -1.7328958134121940058684711M+0
                f(x) =  2.7392301134575853247080809M+1

      J =  8      x  = -1.7319129362489493341879230M+0
                f(x) =  2.7392304746644816699428598M+1

      J =  9      x  = -1.7320524430474144437297475M+0
                f(x) =  2.7392304845399365140015069M+1

      J = 10      x  = -1.7320507964712586202724654M+0
                f(x) =  2.7392304845413263121221407M+1

      J = 11      x  = -1.7320508075473248499209488M+0
                f(x) =  2.7392304845413263761162264M+1

      J = 12      x  = -1.7320508075688755436826220M+0
                f(x) =  2.7392304845413263761164678M+1

      J = 13      x  = -1.7320508075688772935504634M+0
                f(x) =  2.7392304845413263761164678M+1

      J = 14      x  = -1.7320508075688772935274463M+0
                f(x) =  2.7392304845413263761164678M+1

      J = 15      x  = -1.7320508075688772935274463M+0
                f(x) =  2.7392304845413263761164678M+1

      J = 16      x  = -1.7320508075688772935274463M+0
                f(x) =  2.7392304845413263761164678M+1

      J = 17      x  = -1.7320508075688772935274463M+0
                f(x) =  2.7392304845413263761164678M+1

  FM_FIND_MIN.   Function   1    17 iterations.  A relative maximum on interval
                -5.0000000000E+00    to     5.0000000000E+00  is
                  x  = -1.7320508075688772935274463M+0
                f(x) =  2.7392304845413263761164678M+1
  
  
  
  Case 4.  The gamma function has one minimum for positive x.
           Find it, printing all iterations.
           Fortran did not provide gamma(x) before the Fortran 2008 standard, 
           so this case was not included in the original fmin.f95.
  
  FM_FIND_MIN.  Begin trace of all iterations.
                Search for a relative minimum on the interval
                 1.0000000000E-01    to     3.0000000000E+00

      J =  1      x  =  1.2077014326253049402066982M+0
                f(x) =  9.1616148336248686241508738M-1

      J =  2      x  =  1.8922985673746950597933018M+0
                f(x) =  9.5915080248098216852654486M-1

      J =  3      x  =  7.8459713474939011958660364M-1
                f(x) =  1.1819895561456941242845048M+0

      J =  4      x  =  1.4996739511318935954530060M+0
                f(x) =  8.8621642565652645309049264M-1

      J =  5      x  =  1.4754491977040327344045616M+0
                f(x) =  8.8568465827746821020555239M-1

      J =  6      x  =  1.4639597923525988739054054M+0
                f(x) =  8.8560551428415135203420435M-1

      J =  7      x  =  1.4615382924839000508037454M+0
                f(x) =  8.8560319818523240132760480M-1

      J =  8      x  =  1.4616275409090497127705819M+0
                f(x) =  8.8560319441997150324880980M-1

      J =  9      x  =  1.4616321797832136045977889M+0
                f(x) =  8.8560319441088921963648288M-1

      J = 10      x  =  1.4616321449029756518453932M+0
                f(x) =  8.8560319441088870028064786M-1

      J = 11      x  =  1.4616321449683867429013016M+0
                f(x) =  8.8560319441088870027881590M-1

      J = 12      x  =  1.4616321449683623416097271M+0
                f(x) =  8.8560319441088870027881590M-1

      J = 13      x  =  1.4616321449683623412626598M+0
                f(x) =  8.8560319441088870027881590M-1

      J = 14      x  =  1.4616321449683623412626595M+0
                f(x) =  8.8560319441088870027881590M-1

      J = 15      x  =  1.4616321449683623412626595M+0
                f(x) =  8.8560319441088870027881590M-1

      J = 16      x  =  1.4616321449683623412626595M+0
                f(x) =  8.8560319441088870027881590M-1

  FM_FIND_MIN.   Function   2    16 iterations.  A relative minimum on interval
                 1.0000000000E-01    to     3.0000000000E+00  is
                  x  =  1.4616321449683623412626595M+0
                f(x) =  8.8560319441088870027881590M-1
  
  
